#This script searches the reportArray array of dictionaries generated by the DPSTxtParser script
#field- Field to focus on
#value- Value to search for within field. Allows for regular expressions

Function searchReport{
    [CmdletBinding(DefaultParameterSetName='ByUserName')]
    param(
        [Parameter (
            mandatory=$True,
            valueFromPipeline=$True,
            valueFromPipelineByPropertyName=$True)]
         [System.Collections.ArrayList] $array,
         [Parameter (
            valueFromPipeline=$True,
            valueFromPipelineByPropertyName=$True)]
         [string] $field,
         [Parameter (
            mandatory=$True,
            valueFromPipeline=$True,
            valueFromPipelineByPropertyName=$True)]
         [string] $value
    )
    $exclude=$false
    #create a new searchedList to contain the matching reports
    [System.Collections.ArrayList] $searchedList= New-Object System.Collections.ArrayList
    if(-not $field -or $field -eq ""){
        foreach ($case in $array){
            foreach ($item in $case.values){
                if($item -match "$value"){
                    [void]$searchedList.add($case.clone())
                    break
                }
            }
        }
    }
    #checks if a valid field is entered
    elseif($array[0].keys -contains $field){
        if($value -match "^-"){
            $value= $value.substring(1)
            $exclude = $true
        }
        #iterates through the array and adds matches into searchedList
        foreach ($case in $array){
            if($exclude){
                if($case.$field -notmatch "$value"){
                    [void]$searchedList.add($case.clone())
                }
            }
            else{
                if($case.$field -match "$value"){
                    [void]$searchedList.add($case.clone())
                }
            }
        }
    }
    else{
        Write-Error "Report does not contain such field"
        return
    }
    return @(,$searchedlist)
}