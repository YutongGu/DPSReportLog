<File version="2.1">
  <FileID>f5d2b77f-80e8-4f8a-8cc3-e3c4b292bb4c</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAADZ9SURBVHhe7d1XbJx3uud5YWawg1kM9mKBWZzF
3uzcDBaLxQxm5nqwe7HAOYM9E073OR3s7uO2u+22LcmSg4JF5ZysnHMOVhZJMefMIlnMORZDMUuU
5CDb3b99/m+xJEouu0VZpkt6v1/gA1lk1Vtvxf/zFovyLCIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKiH73l/9v/+leJHy9Zlrh91/7ET7btBAAAL5Rdibv2HEh8
9dVXE//ZP/kniZPr+/f3V3/1v+TsP3JK1R0jqu+5rbruMQAA8EIZV33otiqaQnr9jT9ocon//j7+
OCHRLf75Nd3KqWoHAAAvqLKWQWUVVjzdALBn74HE5v67ygt2KL+6EwCAl1JBTZeK6np+ELeNfFNY
1x3z+0+rsLY7sk+1z2mfJq9jcUOfiquanm4A2L5zjzcAFNR0ezv0pLLWYRU2jim/cVwFDUN2pSM7
DgDAi8ItlO5AN6WwQSlFDUqdJnced163jWLbVnppk/f3WKf9S9z5MstaVFwfUm5lu/29Pubp/hJv
n4xb+Ismr2dp04AKKxp+yADQpeKWYeXV3talGxkqC1xQTcV5FZfkKCc4pKJGuwA7zaPTAwAQp+xo
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
HV1PvRZFPe8BwHHPp4bqSnsOZKuoqEhHT5zSZrsPNq5eqqycAjuQ7VVVZeXk/sbexvdx+/qC/ggg
5P0ua21dvbfzTY0N3hVxnzR2T0J3w0Q/4en9ul0o8nua0U8cT8fzGADcNlrsBavJ9tXtr+OOXLxP
PofshbCwWL3h4chnEyb31X0A0J3P+wS0bcP7LYenvH2iGABmXtwNAJPcJ6Kjjyvvk/bR54Q9V9wn
o72vuT/tMRb9pL77mvtv77cB7HtTH5fuueVO655z7mvRy2m052FdXa298NV6z5muyX/fw/16YNge
w+403nlte5Hn66D6u9t069pFnTl/VU0dPTacPPqEuXeZ9rx1p/f2x+2ve15M81PaP6aXdQBwt7N7
jWtoaPResxrtdbYmUKhyG9qGhoe9+8j9ltLDx9ETr13Rx0jkvn+6xd9x530eA4DbTosNjNHX3Zbm
Ju+DgNH9ffy11u5HG2LdBxWjr7nT8WMMAI573Xf76P7FPjfMu+dWfb0NX7b/3nPIvv8si7/jzh8X
A4D7BxSmMwA47rTuCkwV63Q/lLscNwC4fZw6AESHgqe93Cf39+F1tQehu3On83bT03JPGAaAmRUd
ANy/APZjPSbj2dTH+GOP8+8V0vDIqMbHRu3FN8bvmcc59+LvnmvuxfhFGADcwZN7PXuax+eT96f7
9yTcIjnd35OfDveYcc+fJweAZ3lOPfm6G+s0z4N7DLjF3l3e1AHADYY/ZACYaup1ebrn1fdz23ED
gPOTDgBuB7zfF7Ybyz2R4onbJ7dvU28kt8/u11ncP1cZj/vsuCeL+/PJ2xs/Lvekd0NXvP7zn3j+
oq8RbvB7EQYA98If769dlZWV3r9RHx0A3DDgbuNYp48H7rZ0/2S8O1qPPgbcn+5dgXj+p4Dd48D9
SO0nGwCc6ItmvIo+EJ/cZ/f1WKePF1P3FzMv1n2Cl1Os+z9evcivXbFOGy9irRMv6j47MzYAAACA
+MEAAACADzEAAADgQwwAAAD40HMbAG7bxu7ZxtwGAQBAfLt/9476n8cAELKNuEkCAADEP/f/nukM
T6jxWQeAJlv8HTdBAACAF4c7iHdr+LQGgJ279iaOfy3vTAAA4MVls4BqW3ufbgBYuXpNdlto0JsY
AADAi6u2pVd5RRVPNwAQERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERFNp1mz/n+hr3kBX2pt7AAAAABJRU5ErkJggg==</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formMain" children="Controls">
    <Property name="AutoScaleDimensions">8, 17</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">1182, 703</Property>
    <Property name="ForeColor">Black</Property>
    <Property name="Icon">
      <Binary>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
C8ECAof/AAqS/wCg2/8Au/T/AMT2/wC69P8Arun/AKbn/wDA3v8Ah+b/AGjL/wBisP8AH6j/ALjr
/wASmv8AA3b/ACyS/wDR6/8ANK7/AAxz/wCk9/8A0v//AM7//wDY//8A4O7/ACyd8QQeiw8zAAAA
AAAAAAAAAAAAAAAACQCQDwgLlvQAser/AN3//wDU8P8AGJv/AAFz/wAAlf8AAHT/AACW/wAAj/8A
AHT/AACW/wAAj/8AAHT/CAGX8QsAwAsJB1cOCAda9AAOnf8ArOv/ANb//wDW//8A1v//ANT//wC4
//8A1P//AL///wDO//8Av/f/AJjp/wBsxf8ASKr/AEWd/wA1vf8AyOn/AHfU/wBQov8AruP/AM3+
/wDT//8Ar/n/AG2x/wAyqv8CDnD9LgIOzDIBBgwAAAAAAAAAAAAAAAAAAG0aAA2f8gDM+v8A0/z/
AKbQ/wAJmf8AAG3/AACU/wAAkf8AAHP/AACU/wAAkf8AAHP/AACU/wACk/8AIpnxAiKYDxYCgBkA
DJnyAJbu/wDs/f8AzPj/ALX//wDP//8Atf//AM7//wDT//8A0P//ANX//wDs+/8AT7L/ALTp/wAX
fP8AYMb/AMvu/wBbs/8AnvT/AMP0/wDV//8A1P//ANH9/wCQ2f8AwvD/ANfx/wC06f8GMLXzBBZ7
GQAAMwEAAAAAAAAAAAQAOusADpn+AOz5/wDM+v8AHqL/AAGZ/wAAj/8AAHP/AACW/wAAj/8AAHP/
AACW/wAAj/8AAHL/AACT/wAEmPIOAWMsLAZu3wJbo/4A1vD/AGHH/wAphv8Axfj/ALT//wDQ//8A
0f//ALX//wDS//8AuP//AMf5/wBhzP8AWab/AGLH/wDL6f8AMa//AL3y/wDQ//8Atf//ANH//wC1
//8Az///AM77/wDQ//8Auf//AND9/wNSxf0ABT3NAAAzDAAAAAAAAAAALQA65QINmf0A4vT/AND6
/wBYpP8ABZL/AABz/wAAj/8AAJb/AABz/wAAj/8AAJb/AABz/wAAkv8AAHP/AACM/gAASPIDCpH+
AKPk/wAXm/8ADHj/AITJ/wDM/P8A0v//AMn5/wCf9P8AwvT/AL/0/wDd9v8AZc7/ALLr/wAxrf8A
xOb/AB16/wBMvf8Azvv/AMX1/wDW/v8Azfr/ANb//wC7//8A0v//ALX//wDS//8C3Pb9LTqi2RgX
ZxoAADMBAAAAAAAAAAAUAHgUAAec8QCF1P8AufL/AGnB/wAGdv8AAIz/AABz/wAAl/8AAI7/AABz
/wAAl/8AAJD/AACY/wABj/8AFoH/AAGS/wAAdP8ABpf/AAF1/wAYof8A5Pj/ALj//wDQ/f8AktT/
ABCe/wBFnf8AJ6b/AGfQ/wA3pf8ATqD/AJ3i/wAPlv8AAHD/AAx4/wCk5P8APaD/AOL3/wCP0v8A
0+f/ANbw/wDL+P8A0///AMf8/wA1uvQRK6wWNCyaAAAAMQAAAAAAAAAAAAAEcj4AGqf0AK33/wBv
1v8AHqb/AAGY/wAAdf8AAJb/AACN/wAAdP8AAJb/AACN/wAAdP8AAJX/AApx/wCl8P8AGaf/AAGQ
/wAAmP8ABpL/AG3U/wDP/f8Azf//ANb//wDg+v8AK7H/ABud/wCi1P8As/D/AFbL/wAwsP8ANq3/
ABp//wAGlf8AAI3/AACV/wAHcP8AgOL/AGTB/wAJef8ACZH/AGnE/wDO+/8Ahtr/AApCxQABNQsA
AAAAAAAAAAAAAAAAAAAADQZ5/wFjyv8A6/z/ANP8/wCBzP8AB5H/AACY/wAAi/8AAHf/AACW/wAA
i/8AAHf/AACW/wAAi/8ADnz/AOj0/wBbvv8ABXn/AACJ/wAMfP8Ayvf/ANP//wC5//8A0f//ALb+
/wCl7v8AX6//AI3s/wBizv8AgNj/AKnk/wC95v8AhM7/AFq0/wBDkv8AKq3/ABJ2/wAAlP8AAIr/
AACJ/wAAdf8ACJD/AJHd/AALb7oAAGoKAAAzAAAAAAAAAAAAAAAAAAAAAAAhCI//An/L/wDQ/P8A
zvv/AFq6/wAFbP8AAJX/AAB4/wAAif8AAJf/AAB4/wAAif8AAJf/AAB4/wANnf8A5/X/AE6r/wAE
i/8AAHf/AAyQ/wDK+v8A0///AMr//wDU//8AyP3/AL3b/wBBvv8Ab8v/AKLf/wDr/P8AV7v/AAOL
/wBXu/8Al9P/ALXj/wCj7/8Agb//AFS4/wBBlf8AGYT/AAeT/wAAZv8AAILwAACKBAMCOwAAADMA
AAAAAAAAAAAAAAAAAAAAABEHbP8Bcsz/AND8/wDJ+v8AIar/AAF9/wAAhv8AAJn/AAB6/wAAhv8A
AJn/AAB6/wAAhv8AAZr/AB2f/wDn9/8AP8r/AANs/wAAlP8AC27/AMHo/wDh/v8Arf//ANL//wC+
//8A5vz/AFbA/wCGyv8Ahdj/AJDX/wBqxf8AMY7/AAmR/wAAZ/8AAJf/AE62/wCKyv8Aqt7/AK3y
/wB95P8AfML/AFCf/wEunPYtG41jAwEwVQAAKgUAAAAAAAAAAAAAAAAAAAAAHQNV/wI3of8A0/3/
AOX//wB84P8ABon/AAB6/wAAg/8AAJn/AAB8/wAAg/8AAJn/AAB8/wABg/8AJp3/AOr2/wBpyf8A
BoP/AACX/wAFgP8AZLj/ANv+/wDV//8Ayv//AMvw/wDX//8A1v//AI/k/wBowv8Aar7/AFSj/wBb
tv8AX8D/ACN+/wAAgf8AHqr/AAp6/wAAlv8ALqD/AGe+/wCaxP8AqO7/Apvu/xuBwv8ACGX4AABf
DwAAAAAAAAAAAAAAAAAAAAAAADiGAAN9+ABmyP8ApuT/AH3h/wAYgv8AAZn/AAB+/wAAgf8AAJn/
AAB+/wAAgf8AAJn/AACA/wANn/8A7Pj/AJDg/wAIhv8AAIH/AACZ/wAAhP8AVcv/AIS4/wBby/8A
XKL/AJvm/wDf+/8Aldb/AOD//wDd//8A1///AH7M/wCA5P8AbLX/AFKt/wAsm/8APrH/AASC/wAA
fP8AAHn/AAB9/wAmrv8AWbL/AIHL/xcIcPkZAGsPAAAAAAAAAAAAAAAAAAAAAAAAP4YAB5v4AHvK
/wCS5P8AkeP/AEG1/wACgf8AAJj/AACC/wAAfv8AAJn/AACB/wAAfv8AAJn/AA2F/wDc+f8Az/n/
AAqF/wAAgf8AAH3/AAB//wAAef8AAH//AACT/wAAZv8APKz/AO32/wAgnv8AULD/AL7//wDW//8A
1///AJrl/wCAz/8Af+X/AHG4/wAklP8AAYD/AACA/wAAmf8AAoP/ACav/wAmsf8BJpb3MAU4eTcA
LAcAAAAAAAAAAAAAAAAAAAAAHBg5/wIPmf8A3/z/ANr//wDV/v8Aicz/AB+I/wAAlv8AAH3/AACB
/wAAfP8AAJn/AACD/wAAev8ACon/ALXd/wDc+f8ANrj/AAOA/wAAhf8AAJj/AACD/wAAeP8AAHn/
ADGh/wCk0/8Ald3/AAeA/wAAgf8AR6j/ALv+/wDV//8Avv//ALDp/wCDyv8AXsX/AJC//wAamf8A
AIL/AAB8/wAEhf8Abcv/AG7J/wAqgfAAT80HMwAzAAAAAAAAAAAAAAAAAAAAAAAvKEJkAQ+d9gDi
+f8A2P//AND8/wByy/8AFJz/ABqY/wACif8AAJj/AACH/wAAev8AAJf/AACH/wAGfv8Ac8v/AMv7
/wCj6P8ACGv/AAB5/wAAmP8ACJ3/AInJ/wCszP8Ax/H/AJXf/wAfjP8AAYf/AACX/wAAZ/8APZv/
AJ/f/wDi//8A2P//AMbt/wCF1v8AYqT/AJbY/wA4uP8AAmv/ADe3/wBKrv8AYMT/AARL9wAAQw8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAA4gkADKDwALr7/wC4//8A0f7/AKru/wBavv8AEZn/AAF6/wAA
lf8AAHn/AACJ/wAAlv8AAHn/AAGI/wAii/8A5/n/ANH8/wA/sP8AA4r/AAB4/wAEl/8AQpn/AFG4
/wBNlf8AF4P/AACJ/wAAl/8AAHj/AACJ/wAAhv8AJIX/AFO5/wDM+/8Au///ANT//wCQz/8ASbv/
AI/N/wB10P8AH6n/AEKa/wAapvUABERRAAAvBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByDwAEdvIA
TbP/AOD7/wDX//8A0v3/AGXN/wAim/8AAo3/AACY/wAAi/8AAHf/AACW/wAAi/8AAHb/AAeO/wCa
1v8A0Pz/AK/u/wAKe/8AAIv/AACX/wAAif8AAHP/AACI/wAAif8AAHf/AACW/wAAi/8AAHf/AACX
/wAAiv8ABnn/AMj3/wDL//8A0///ALr//wC14v8AN6z/AG/a/wCy4f8CHZv/JQB08TsAkQkAADMA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIDAAJlOgEJcvQANKn/AGyw/wBy1v8Ake7/ADGf/wAEmP8A
AHX/AACW/wAAjf8AAHT/AACW/wAAjf8AAXb/ACCk/wDJ+f8A0/7/AIbc/wAJev8AAJT/AAB1/wAA
i/8AAHX/AACW/wAAjf8AAHT/AACX/wAAjf8AAXX/AAyd/wCj3v8AtP3/ANL//wC4//8A5P7/AJf3
/wAHeP8AFH3/AFav/wF83P8KCEbuCwA8DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZgA1LGMM
KSJn8QIMmv8A1Or/AMP3/wDM/P8AmMn/AGnC/wAHk/8AAXP/AACV/wAAj/8AAHP/AACV/wAAj/8A
AnT/AEmo/wDo+f8Azf3/AG+9/wALeP8AAI7/AAKZ/wABj/8AAHP/AACU/wADbv8ABJb/AA55/wBu
vP8As+7/ANX//wDP//8A1v//AOL6/wBvzv8AGob/ABKX/wCb2/8CD5j3KBpX6woIOi8AAC8CAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMrOQ0wKT/kAw+a/gDQ+v8A1P//ANP//wCt+P8AgdH/
ADLE/wAikf8AAnP/AACU/wAAkf8AAHP/AACU/wAAkf8ACXX/AGTJ/wDL+f8AzPr/AJXo/wAVff8A
Qpf/ACmZ/wAOmf8AEqH/AFHC/wB7y/8A2O3/AM76/wDU//8A1f//AM76/wDA9f8ALKn/AByA/wBw
vv8Axeb+ACWq5gIHmSgzAC0a/wAAAAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMysx
AR4XYB8EDp7zAOT2/wC2//8Az///AND//wCs+f8Aj8n/ABJ1/wAAkf8AAHP/AACS/wAAk/8AAHP/
AACS/wAAk/8ADHn/AHvF/wDm+P8A1f//AJzw/wAkpv8AWqL/AK/q/wDS7/8Awvf/AMr3/wC5//8A
0v//ALn//wDH9v8AaK7/ACer/wBvxP8AyOb/AFXE/wQXc/ICBIMfAACZADAAOQAzADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzKzMAMACaDC0KnNUClcr9AND9/wC7//8Azv//ALfx
/wBO0f8AUJ//AAmY/wAAj/8AAHP/AACX/wAAj/8AAHL/AACR/wAAlP8ACnL/AFbG/wDW8f8A1f//
AMv5/wCm0P8ALKz/ACms/wBgzP8An9D/ALvw/wDB8v8A2PD/AIDS/wCY7P8Al+//AEKs/wAsqv8C
GaL/KAE78SsAMw4AAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAzAJkADgONFAAOjvQAqej/ANTu/wCU6v8AXbT/AL/3/wCL0/8AOan/ABB1/wABlf8AAI//AAB0
/wAAk/8AAHX/AACU/wAAc/8AApD/ABCf/wCp4/8Awvf/ANX//wDT/v8A1Pv/AJDX/wBs0v8ATK7/
AEus/wBLrv8ATND/AHOx/wCR1v8Aufz/AOz+/wCW7P8BCU7xAgAuCwMCOQAwKDMAMyszADMrAAAz
KwAAMysAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQLAAA6vgAElMwAJJz8AFey/wDo
+v8Auf//AND//wCQ+f8AQp7/AAKW/wAAdv8AAIz/AACY/wAAjv8AAJj/AACM/wAAdv8AAJT/AAVu
/wBGv/8Ao93/ALTq/wDZ9v8A0P//ANj//wDg//8A2f//AOD//wDR//8A6v//AL/2/wDP6v8Apd3/
AEXC/wAEm/QAAJdBAwAtNjQsKjIAGv8AAAD/ADgvAC8AAP8AMCg5ADMrMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAMwAAADkAEQCMDA4MlPEBw/v/ANT//wDV//8Ay///ANX5/wAXn/8AHaP/AAKL/wAA
dv8AAIj/AAB3/wAAlf8AAHf/AACK/wAAlv8AAHj/AACI/wAAdv8AHpf/AD+x/wB74v8Andf/ALnY
/wCh4/8AuNj/AIHk/wB51f8AP7H/AB6Y/wAAdf8AAIr/AACX/wAAiv8CB1v/IxpN9wcag00HAHxN
JRkp7AoAd000KzA/AAD/AAAAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAFQPIQdd9wGA6v8A
4P//AMb//wC5//8A2/r/AEWg/wCB0/8AAnr/AACW/wAAeP8AAIj/AACY/wAAif8AAHn/AACW/wAA
iv8AAHf/AACI/wAAl/8AAHf/AACE/wAAc/8AAGb/AACT/wAAdv8AAIT/AAB1/wAAdf8AAIj/AACY
/wAAef8AAJX/AAZu/wBn1v8ARr3/AFy5/wBEuf8AT7z/AjOz/yEYVvoGAFtWuBN9ADMAZgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAMQkAAjudEh+j/wGr7P8Az///AOL+/wCN7P8AeMX/ALP5/wBgwv8A
Apj/ABuX/wACev8AAIP/AAB5/wAAhv8AAJX/AABp/wAAlf8AAHz/AACF/wAAmf8AAHz/AACY/wAA
fP8AAIb/AACX/wAAfP8AAIb/AACX/wAAfP8AAIX/AACY/wAAhv8ADID/AOX5/wDd//8A2v//ANv/
/wDi//8AvP7/AGLC/wEejPwvBGtjNwBmBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAP8A/wExAGeP
Ahmf/wCi6/8A1f3/AFG9/wDK/v8Axv//AOn//wBUx/8AX67/AAaa/wAAf/8AAJb/AAB//wAAl/8A
AH//AACY/wAAhP8AAHv/AACC/wAAmf8AAIT/AACW/wAAaf8AAJX/AACE/wAAfv8AAJb/AACF/wAA
ff8AAJb/AABo/wAYr/8A2vv/AMT//wDU//8A1f//AL3//wDX//8A3P//Aorf/xwHavgeAGMPAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAMwBmAP8qygAAAGOCABKB/wBOyf8AOKD/AN/5/wDB//8A0v//
ALL//wC15P8ACJr/AACD/wAlrP8AAIH/AAB+/wAAmf8AAID/AACB/wAAmP8AAH//AAB+/wAAgP8A
AJb/AACD/wAAlv8AAIH/AACB/wAAlf8AAGj/AACT/wAAfv8AUZn/AILk/wDP/v8AwP//ANT//wDB
//8A1P//AMD//wDA//8A4Pv/ACKe8QAVmA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABm
AAAQ/wAAAC50AABe/wAenf8A5Pz/ANb//wC+//8AxP//AN79/wA8uf8AWZ//AFLH/wAvnf8APZn/
AAF8/wAAgP8AAH//AACZ/wAAmf8AAIP/AAB9/wAAl/8AAID/AACW/wAAf/8AAIH/AACV/wAAhf8A
Xc7/AHe9/wCu6v8A1///AML//wDV//8Avv//AMH//wDT//8Awv//AMD//wDb/P8AOdTxAC7RDwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAATgAAADZnAAZ8/QB+wv8A1f7/AMj/
/wDY//8A6f3/AGe1/wDB6v8Apev/AJDu/wDG6v8AO6b/ADCX/wABg/8AAHv/AACX/wABf/8AFJ3/
AAB7/wAAhP8AAJX/AACE/wAvmf8AN7f/AJPV/wBoxv8A1///AMf//wDU//8A1v//ALz//wDD//8A
1v//ANT//wC9//8Axf//AOH7/wAes/EAEa4PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAzAAAAAAAGAWVaIAx4+wJHuP8AneD/ALf9/wB2wP8AYL//AM39/wC9//8Ayv//AN/+
/wB60v8Acdz/ADe6/wAZhv8AAHP/AANq/wBz4/8AH4v/AB6a/wBQuP8AVbv/AHG9/wCT7f8A4f//
AJza/wCEv/8A1Pz/ANX//wC5//8Axv//ANT//wC7//8A0v//AMf//wDV//8CwPn/IAt99iIAdQ8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAAAKcQA0AGRDAwCFUgIh
YPghK4z/Agp2/wAjqv8A5/v/AMv//wDV//8A0f7/AJ7u/wBtvv8Aye7/AKfk/wB91P8Af9f/AMT8
/wCJ4/8AccP/ALvv/wDD8v8A2fP/ALH//wDS//8A1///AK7i/wB82v8Am9z/AOT+/wDY//8A1f//
AMn//wDV//8A2P//AM78/wE2uPgtCHFONwBiBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAMwBmADAAaQAKGP8AAwAoNjEAVzoDAGxFAASZ9ABds/8A0fv/APL//wDY
//8A3/r/ACyj/wDx+v8Avf//AMv//wCx//8A0///AMb8/wBSsP8A6fv/ALr//wDA//8Ay///ANP/
/wC4//8A1P//ALLx/wBgzP8AQrb/AJD7/wC0//8A0v//ALL9/wBy2P8AM7L0AACXQb0nAAAzAGYA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAD
ADYALQBjAAsAAAAAAYM2AgdL7yUlpvoCMq77AGbO/wBOq/8BCpv/AHLS/wDj+/8A1v//AM7//wDV
//8A0v7/AJPr/wF71/8A4/z/AM7//wDU//8At///AMz//wDW//8C6fv/Jz3O7woDpDkKXdE5JyBa
7wUmWPonH1nvCjyqOQAAlCsAPLYAAACZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZAAAY/wADADEgMQCMIgIAfC4A
CkjpAgY+9SciHfUCDXH1ACup9QCk8/4Ay/n/As35/wDH9f4CY9H1JxN+9QJM0PUAqPX+Auv5/wDo
+/8Czfn/AKbz/gBPrOomMsEsAAAAAAD//wA0ACQgBgAlIjQAJCAA//8AAAWcAAAAmQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAzAAMAOQAtAJMAAAAAAAAAKhkDACoaMCgAGgMAXRoAAHYnABFL8gMWc/8p
FnP/AxZM8gI4lycwAmwaAhmXJwMSTPIpGnb/BRue/ykWdv8DEkvyABp3JgAAAAAzK8wAMwAzADAA
MwAGADMAMAAzADMAMwAAAAAAAAAAAAAAAAAAAAAAf//A/AH/gACAAAAAAABAAIAAAAAAAEAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAA
AEAAAAAAAAAAgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAD
gAAAAAAAAAPAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA4AAAAAAAAAAAABgAAAAAAAAAHgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAB/AAAAAAAAAH+AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgAAAAAAAQAD//4AAAAPAAA==</Binary>
    </Property>
    <Property name="Margin">5, 5, 5, 5</Property>
    <Property name="Name">formMain</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">ReportSC: Your Personal DPS Reports Database</Property>
    <Event name="FormClosing">formMain_FormClosing</Event>
    <Event name="FormClosed">formMain_FormClosed</Event>
    <Event name="Load">formMain_Load</Event>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonGenerateHistogram" children="Controls">
      <Property name="Anchor">Bottom</Property>
      <Property name="ImageList">
        <Reference name="imagelistButtonBusyAnimation" />
      </Property>
      <Property name="Location">450, 658</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonGenerateHistogram</Property>
      <Property name="Size">300, 30</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">Generate &amp;Histogram</Property>
      <Property name="TextImageRelation">ImageBeforeText</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonGenerateHistogram_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="sizeLabel" children="Controls">
      <Property name="Font">Microsoft Sans Serif, 9pt</Property>
      <Property name="Location">19, 52</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">sizeLabel</Property>
      <Property name="Size">113, 26</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">Size: </Property>
      <Property name="TextAlign">MiddleLeft</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxSearch" children="Controls">
      <Property name="Anchor">Top, Left, Right</Property>
      <Property name="Location">19, 20</Property>
      <Property name="Margin">5, 5, 5, 5</Property>
      <Property name="Name">textboxSearch</Property>
      <Property name="Size">896, 23</Property>
      <Property name="TabIndex">0</Property>
      <Event name="KeyDown">textboxSearch_KeyDown</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewResults" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="Anchor">Top, Bottom, Left, Right</Property>
      <Property name="EditMode">EditOnF2</Property>
      <Property name="Location">19, 78</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">datagridviewResults</Property>
      <Property name="RowTemplate">
        <Property name="Height">24</Property>
      </Property>
      <Property name="Size">1150, 572</Property>
      <Property name="TabIndex">2</Property>
      <Event name="CellContentClick">datagridviewResults_CellContentClick</Event>
      <Event name="CellContentDoubleClick">datagridviewResults_CellContentDoubleClick</Event>
      <Event name="CellEndEdit">datagridviewResults_CellEndEdit</Event>
      <Event name="ColumnHeaderMouseClick">datagridviewResults_ColumnHeaderMouseClick</Event>
      <Event name="UserDeletingRow">datagridviewResults_UserDeletingRow</Event>
      <Event name="KeyPress">datagridviewResults_KeyPress</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSearch" children="Controls">
      <Property name="Anchor">Top, Right</Property>
      <Property name="Location">924, 16</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonSearch</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Search</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSearch_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonLoad" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="Location">958, 658</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonLoad</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Load</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonLoad_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSave" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">19, 658</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonSave</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Save</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSave_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonUpdate" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="Location">850, 658</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonUpdate</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Update</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonUpdate_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonExport" children="Controls">
      <Property name="Anchor">Bottom, Left</Property>
      <Property name="Location">127, 658</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonExport</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">&amp;Export</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonExport_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonExit" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="Location">1066, 658</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonExit</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">E&amp;xit</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonExit_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonAddRow" children="Controls">
      <Property name="Anchor">Top, Right</Property>
      <Property name="Location">1066, 16</Property>
      <Property name="Margin">4, 4, 4, 4</Property>
      <Property name="Name">buttonAddRow</Property>
      <Property name="Size">100, 30</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">&amp;Add</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonAddRow_Click</Event>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.Timer, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="timerJobTracker">
    <Event name="Tick">timerJobTracker_Tick</Event>
  </Object>
  <Object type="System.Windows.Forms.ImageList, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="imagelistButtonBusyAnimation">
    <Property name="ImageStream">
      <Binary>AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAA
ACZTeXN0ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkD
AAAADwMAAAB2CgAAAk1TRnQBSQFMAgEBCAEAAVABAQFQAQEBEAEAARABAAT/ASEBAAj/AUIBTQE2
BwABNgMAASgDAAFAAwABMAMAAQEBAAEgBgABMP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
AP8AugADwgH/AzUB/wM1Af8DwgH/MAADwgH/A1UB/wOCAf8DwgH/sAADNQH/AwAB/wMAAf8DNQH/
MAADggH/AzUB/wM1Af8DVQH/gAADwgH/AzUB/wM1Af8DwgH/IAADNQH/AwAB/wMAAf8DNQH/A8IB
/wNVAf8DggH/A8IB/xAAA8IB/wM1Af8DNQH/A8IB/wNVAf8DNQH/AzUB/wNVAf8EAAOSAf8DkgH/
A8IB/3AAAzUB/wMAAf8DAAH/AzUB/yAAA8IB/wM1Af8DNQH/A8IB/wOCAf8DNQH/AzUB/wOCAf8Q
AAM1Af8DAAH/AwAB/wM1Af8DwgH/A1UB/wOCAf8DwgH/A5IB/wOCAf8DggH/A5IB/3AAAzUB/wMA
Af8DAAH/AzUB/zAAA1UB/wM1Af8DNQH/A1UB/xAAAzUB/wMAAf8DAAH/AzUB/xAAA5IB/wOSAf8D
kgH/A8IB/3AAA8IB/wM1Af8DNQH/A8IB/zAAA8IB/wNVAf8DggH/A8IB/xAAA8IB/wM1Af8DNQH/
A8IB/xAAA8IB/wOSAf8DkgH/A8IB/zgAA8IB/wM1Af8DNQH/A8IB/zAAA8IB/wOCAf8DVQH/A8IB
/zAAA8IB/wPCAf8DkgH/A8IB/zQAA8IB/wPCAf80AAM1Af8DAAH/AwAB/wM1Af8wAANVAf8DNQH/
AzUB/wNVAf8wAAOSAf8DggH/A4IB/wOSAf8wAAPCAf8DwgH/A8IB/wPCAf8wAAM1Af8DAAH/AwAB
/wM1Af8wAAOCAf8DNQH/AzUB/wOCAf8wAAPCAf8DggH/A5IB/wOSAf8wAAPCAf8DwgH/A8IB/wPC
Af8wAAPCAf8DNQH/AzUB/wPCAf8wAAPCAf8DggH/A1UB/wPCAf8wAAPCAf8DkgH/A5IB/wPCAf80
AAPCAf8DwgH/EAADwgH/A8IB/xQAA8IB/wOCAf8DVQH/A8IB/zAAA8IB/wOSAf8DkgH/A8IB/zQA
A8IB/wPCAf9UAAPCAf8DwgH/A8IB/wPCAf8QAANVAf8DNQH/AzUB/wNVAf8wAAOSAf8DggH/A5IB
/wOSAf8wAAPCAf8DwgH/A8IB/wPCAf9QAAPCAf8DwgH/A8IB/wPCAf8DwgH/A8IB/wOSAf8DwgH/
A4IB/wM1Af8DNQH/A4IB/yQAA8IB/wPCAf8EAAPCAf8DggH/A5IB/wOSAf8wAAPCAf8DwgH/A8IB
/wPCAf9UAAPCAf8DwgH/BAADkgH/A4IB/wOCAf8DkgH/A8IB/wOCAf8DVQH/A8IB/yAAA8IB/wPC
Af8DwgH/A8IB/wPCAf8DkgH/A5IB/wPCAf80AAPCAf8DwgH/ZAADkgH/A5IB/wOSAf8DkgH/MAAD
wgH/A8IB/wPCAf8DwgH/sAADwgH/A5IB/wOSAf8DwgH/NAADwgH/A8IB/7QAA8IB/wPCAf8DkgH/
A8IB/zQAA8IB/wPCAf+0AAOSAf8DggH/A4IB/wOSAf8wAAPCAf8DwgH/A8IB/wPCAf+gAAPCAf8D
VQH/A4IB/wPCAf8DkgH/A5IB/wOSAf8DwgH/BAADwgH/A8IB/xQAA8IB/wPCAf8DkgH/A8IB/wPC
Af8DwgH/A8IB/wPCAf8kAAPCAf8DwgH/dAADggH/AzUB/wM1Af8DggH/A8IB/wOSAf8DkgH/A8IB
/wPCAf8DwgH/A8IB/wPCAf8QAAOSAf8DggH/A4IB/wOSAf8EAAPCAf8DwgH/JAADwgH/A8IB/wPC
Af8DwgH/cAADVQH/AzUB/wM1Af8DggH/EAADwgH/A8IB/wPCAf8DwgH/EAADkgH/A5IB/wOSAf8D
kgH/MAADwgH/A8IB/wPCAf8DwgH/cAADwgH/A1UB/wNVAf8DwgH/FAADwgH/A8IB/xQAA8IB/wOS
Af8DkgH/A8IB/zQAA8IB/wPCAf9sAAPCAf8DNQH/AzUB/wPCAf8wAAPCAf8DVQH/A4IB/wPCAf8w
AAPCAf8DwgH/A5IB/wPCAf80AAPCAf8DwgH/NAADNQH/AwAB/wMAAf8DNQH/MAADggH/AzUB/wM1
Af8DVQH/MAADkgH/A4IB/wOCAf8DkgH/MAADwgH/A8IB/wPCAf8DwgH/MAADNQH/AwAB/wMAAf8D
NQH/MAADVQH/AzUB/wM1Af8DggH/MAADkgH/A5IB/wOSAf8DkgH/MAADwgH/A8IB/wPCAf8DwgH/
MAADwgH/AzUB/wM1Af8DwgH/MAADwgH/A1UB/wNVAf8DwgH/MAADwgH/A5IB/wOSAf8DwgH/NAAD
wgH/A8IB/3wAA8IB/wM1Af8DNQH/A8IB/zAAA8IB/wNVAf8DggH/A8IB/zAAA8IB/wPCAf8DkgH/
A8IB/xAAA8IB/wM1Af8DNQH/A8IB/1AAAzUB/wMAAf8DAAH/AzUB/zAAA4IB/wM1Af8DNQH/A1UB
/zAAA5IB/wOCAf8DggH/A5IB/xAAAzUB/wMAAf8DAAH/AzUB/1AAAzUB/wMAAf8DAAH/AzUB/zAA
A1UB/wM1Af8DNQH/A4IB/wOSAf8DNQH/AzUB/wPCAf8gAAOSAf8DkgH/A5IB/wOSAf8DwgH/A1UB
/wOCAf8DwgH/AzUB/wMAAf8DAAH/AzUB/1AAA8IB/wM1Af8DNQH/A8IB/zAAA8IB/wOCAf8DVQH/
A8IB/wM1Af8DAAH/AwAB/wM1Af8gAAPCAf8DkgH/A5IB/wPCAf8DggH/AzUB/wM1Af8DVQH/A8IB
/wM1Af8DNQH/A8IB/6AAAzUB/wMAAf8DAAH/AzUB/zAAA1UB/wM1Af8DNQH/A4IB/7AAA8IB/wM1
Af8DNQH/A8IB/zAAA8IB/wOCAf8DVQH/A8IB/xgAAUIBTQE+BwABPgMAASgDAAFAAwABMAMAAQEB
AAEBBQABgAEBFgAD/4EABP8B/AE/AfwBPwT/AfwBPwH8AT8D/wHDAfwBAwHAASMD/wHDAfwBAwHA
AQMD/wHDAf8DwwP/AcMB/wPDAf8B8AH/AfAB/wHwAf8B+QH/AfAB/wHwAf8B8AH/AfAB/wHwAf8B
8AH/AfAB/wHwAf8B8AH/AfAB/wHwAf8B+QHnAcMB/wHDAf8B5wL/AsMB/wHDAf8BwwL/AcABAwH+
AUMB/wHDAv8B5AEDAfwBAwH/AecC/wH8AT8B/AE/BP8B/AE/Af4BfwT/AfwBPwH+AX8E/wH8AT8B
/AE/BP8BwAEnAcABPwHnA/8BwAEDAcIBfwHDA/8DwwH/AcMD/wHDAecBwwH/AecD/wEPAf8BDwH/
AQ8B/wGfAf8BDwH/AQ8B/wEPAf8BDwH/AQ8B/wEPAf8BDwH/AQ8B/wEPAf8BDwH/AQ8B/wGfA/8B
wwH/AcMB/wLDAv8BwwH/AcMB/wLDAv8BwwH/AcABPwHAAQMC/wHDAf8BwAE/AcABAwT/AfwBPwH8
AT8E/wH8AT8B/AE/Cw==</Binary>
    </Property>
    <Property name="TransparentColor">Transparent</Property>
  </Object>
  <Code><![CDATA[
#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			$Item,
			[Parameter(Mandatory = $false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeRows = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
			-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView])
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	$DataGridView.Columns[0].Visible = $false
	$DataGridView.Columns[0].Width = 50;
	$DataGridView.Columns[1].Width = 75;
	$DataGridView.Columns[2].Width = 150;
	$DataGridView.Columns[3].Width = 150;
	$DataGridView.Columns[4].Width = 125;
	$DataGridView.Columns[5].Width = 185;
	$DataGridView.Columns[6].Width = 100;
	$DataGridView.Columns[7].Width = 225;
	$DataGridView.Columns[8].Width = 75;
	
	if ($AutoSizeRows -ne 'None')
	{
		$DataGridView.AutoResizeRows($AutoSizeRows)
	}
	
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param (
			[ValidateNotNull()]
			$InputObject,
			[ValidateNotNull()]
			[System.Data.DataTable]$Table,
			[switch]$RetainColumns,
			[switch]$FilterWMIProperties)
	
	if ($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		#[void][System.Windows.Forms.MessageBox]::Show($InputObject.getType(), "String not Found")
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			
			
			[void]$table.Columns.Add("Index")
			[void]$table.Columns.Add("Report #")
			[void]$table.Columns.Add("Incident")
			[void]$table.Columns.Add("Location")
			[void]$table.Columns.Add("Reported")
			[void]$table.Columns.Add("Occurred")
			[void]$table.Columns.Add("Disposition")
			[void]$table.Columns.Add("Summary")
			[void]$table.Columns.Add("File")
			
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($key in $item.keys)
				{
					if ($table.Columns.Contains($key))
					{
						$row.Item($key) = $item[$key]
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	return @( ,$Table)
}
#endregion

#region Search Function
function SearchGrid()
{
	
	$RowIndex = 0
	$ColumnIndex = 0
	$input = $textboxSearch.Text
	$tempSearchList = $global:reportList
	$searchDataTable = New-Object System.Data.DataTable
	$searched = $false
	$searchKey=""
	if ($input -match ",")
	{
		$input = $input -split ","
	}
	foreach ($searchString in $input)
	{
		$searchKey=""
		$searchString = $searchString.trim()
		if ($searchString -match ":")
		{
			$searchKey = $searchString -split ':'
			$searchString = $searchKey[1]
			$searchKey = $searchKey[0]
			$searchKey = $searchKey.trim()
			$searchString = $searchString.trim()
		}
		if (($searchString -eq $null) -or (-not ($searchString -match "\w")))
		{
			continue
		}
		if ($searchKey -ne "" -and (-not ($global:reportList[0].keys -contains $searchKey)))
		{
			[void][System.Windows.Forms.MessageBox]::Show("An invalid field value has been provided.", "Invalid search parameters")
			return
		}
		
		$tempsearchList = searchReport -array $tempsearchList -field $searchKey -value $searchString
		$searched = $true
	}
	
	if ($searched -eq $false)
	{
		if ($global:editedsearch -eq $true)
		{
			$sizeLabel.Text = "Size: " + $global:reportList.count
			ConvertTo-DataTable -Table $global:mainDataTable -InputObject $global:reportList -RetainColumns
			$global:editedsearch = $false
		}
		$global:searchstate = $false
		Load-DataGridView -DataGridView $datagridviewResults -Item $global:mainDataTable
		return
	}
	
	if ($global:searchList -ne $null -or $global:searchList.count -ne 0)
	{
		$global:searchList.clear()
	}
	
	if ($tempsearchList -ne $null)
	{
		$global:searchList = $tempsearchList
		$global:searchstate = $true
		$sizeLabel.Text = "Size: " + $global:searchList.count
		ConvertTo-DataTable -InputObject $global:searchList -Table $searchDataTable
		Load-DataGridView -DataGridView $datagridviewResults -Item $searchDataTable
	}
	else
	{
		$response = [System.Windows.forms.MessageBox]::Show("Search results returned nothing.", "Search results")
	}
}
#endregion
$formMain_Load={
	#TODO: Initialize Form Controls here
	$buttonGenerateHistogram.Enabled = $false
	$buttonSave.Enabled = $false
	$buttonAddRow.Enabled = $false
	$buttonExport.Enabled = $false
}

$buttonExit_Click={
	#TODO: Place custom script here

	$formMain.Close()
}

$buttonSearch_Click={
	#TODO: Place custom script here
	if ($global:datasetFile -ne "")
	{
		SearchGrid
	}
}

$datagridviewResults_ColumnHeaderMouseClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	if($datagridviewResults.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridviewResults.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}

		$datagridviewResults.Sort($datagridviewResults.Columns[$_.ColumnIndex], $direction)
	}
	
}

$formMain_FormClosed=[System.Windows.Forms.FormClosedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.FormClosedEventArgs]
	#Stop any pending jobs
	
	Stop-JobTracker
}

$timerJobTracker_Tick={
	Update-JobTracker
}

#region Job Tracker
$JobTrackerList = New-Object System.Collections.ArrayList
function Add-JobTracker
{
	<#
		.SYNOPSIS
			Add a new job to the JobTracker and starts the timer.
	
		.DESCRIPTION
			Add a new job to the JobTracker and starts the timer.
	
		.PARAMETER  Name
			The name to assign to the Job
	
		.PARAMETER  JobScript
			The script block that the Job will be performing. 
			Important: Do not access form controls from this script block.
	
		.PARAMETER ArgumentList
			The arguments to pass to the job
	
		.PARAMETER  CompleteScript
			The script block that will be called when the job is complete.
			The job is passed as an argument. The Job argument is null when the job fails.
	
		.PARAMETER  UpdateScript
			The script block that will be called each time the timer ticks. 
			The job is passed as an argument. Use this to get the Job's progress.
	
		.EXAMPLE
			Add-JobTracker -Name 'JobName' `
			-JobScript {	
				Param($Argument1)#Pass any arguments using the ArgumentList parameter
				#Important: Do not access form controls from this script block.
				Get-WmiObject Win32_Process -Namespace "root\CIMV2"
			}`
			-CompletedScript {
				Param($Job)		
				$results = Receive-Job -Job $Job		
			}`
			-UpdateScript {
				Param($Job)
				#$results = Receive-Job -Job $Job -Keep
			}
	
		.LINK
			
	#>
	
	Param(
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[string]$Name, 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[ScriptBlock]$JobScript,
	$ArgumentList = $null,
	[ScriptBlock]$CompletedScript,
	[ScriptBlock]$UpdateScript)
	
	#Start the Job
	$job = Start-Job -Name $Name -ScriptBlock $JobScript -ArgumentList $ArgumentList
	
	if($null -ne $job)
	{
		#Create a Custom Object to keep track of the Job & Script Blocks
		$members = @{	'Job' = $Job;
						'CompleteScript' = $CompletedScript;
						'UpdateScript' = $UpdateScript}
		
		$psObject = New-Object System.Management.Automation.PSObject -Property $members
		
		[void]$JobTrackerList.Add($psObject)	
		
		#Start the Timer
		if(-not $timerJobTracker.Enabled)
		{
			$timerJobTracker.Start()
		}
	}
	elseif($null -ne $CompletedScript)
	{
		#Failed
		Invoke-Command -ScriptBlock $CompletedScript -ArgumentList $null
	}

}

function Update-JobTracker
{
	<#
		.SYNOPSIS
			Checks the status of each job on the list.
	#>
	
	#Poll the jobs for status updates
	$timerJobTracker.Stop() #Freeze the Timer
	
	for($index =0; $index -lt $JobTrackerList.Count; $index++)
	{
		$psObject = $JobTrackerList[$index]
		
		if($null -ne $psObject) 
		{
			if($null -ne $psObject.Job)
			{
				if($psObject.Job.State -ne "Running")
				{				
					#Call the Complete Script Block
					if($null -ne $psObject.CompleteScript)
					{
						#$results = Receive-Job -Job $psObject.Job
						Invoke-Command -ScriptBlock $psObject.CompleteScript -ArgumentList $psObject.Job
					}
					
					$JobTrackerList.RemoveAt($index)
					Remove-Job -Job $psObject.Job
					$index-- #Step back so we don't skip a job
				}
				elseif($null -ne $psObject.UpdateScript)
				{
					#Call the Update Script Block
					Invoke-Command -ScriptBlock $psObject.UpdateScript -ArgumentList $psObject.Job
				}
			}
		}
		else
		{
			$JobTrackerList.RemoveAt($index)
			$index-- #Step back so we don't skip a job
		}
	}
	
	if($JobTrackerList.Count -gt 0)
	{
		$timerJobTracker.Start()#Resume the timer	
	}	
}

function Stop-JobTracker
{
	<#
		.SYNOPSIS
			Stops and removes all Jobs from the list.
	#>
	#Stop the timer
	$timerJobTracker.Stop()
	
	#Remove all the jobs
	while($JobTrackerList.Count -gt 0)
	{
		$job = $JobTrackerList[0].Job
		$JobTrackerList.RemoveAt(0)
		Stop-Job $job
		Remove-Job $job
	}
}
#endregion

$buttonGenerateHistogram_Click = {
	if ($global:datasetFile -ne "")
	{
		$histogram = @{ }
		$minihistogram = @{ }
		$formGenerateHistogram.showDialog()
	}
	else
	{
		[System.Windows.forms.MessageBox]::Show("Please load a file before generating histograms.", "Error")
	}
	
}

$textboxSearch_KeyDown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	if($_.KeyCode -eq 'Enter' -and $buttonSearch.Enabled)
	{
		SearchGrid	
		$_.SuppressKeyPress = $true
	}
}

$datagridviewResults_CellContentDoubleClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here	
	
	$columns = $datagridviewResults.Columns
	if ($columns[$_.ColumnIndex].name -eq "file")
	{
		$value = $datagridviewResults.CurrentCell.Value
		$value=$value -replace ".txt", ".pdf"
		$month = $value.substring(0, 2)
		$year = $value.substring(4, 2)
		Invoke-Expression "cmd.exe /C start http://dps.usc.edu/files/20$year/$month/$value"
	}
	
	
}

$datagridviewResults_CellEndEdit=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
	$field = $datagridviewResults.Columns[$_.ColumnIndex].name
	[int]$index = [System.Convert]::ToInt32($datagridviewResults.Rows[$_.RowIndex].Cells[0].Value)
	
	$value = $datagridviewResults.Rows[$_.RowIndex].Cells[$_.ColumnIndex].Value
	if ([string]::Compare($value,$global:reportList[$index].$field))
	{
		$global:changed = $true
		if ($global:searchstate -eq $true)
		{
			$failed=$false
			$global:editedsearch = $true
			$global:searchList[$_.RowIndex].$field = $value
		}
		$global:reportList[$index].$field = $value
	}
	
	
}

$buttonExport_Click={
	#TODO: Place custom script here
	if ($global:datasetFile -ne "")
	{
		[System.Windows.Forms.SaveFileDialog]$filedialog = New-Object System.Windows.Forms.SaveFileDialog
		
		if ($global:exportdirectory -eq "")
		{
			$filedialog.InitialDirectory = "$ScriptDirectory\data"
		}
		else
		{
			$filedialog.InitialDirectory = $global:exportdirectory
		}
		$filedialog.Title = "Export Dataset"
		$filedialog.CheckFileExists = $false
		$filedialog.CheckPathExists = $true
		$filedialog.AddExtension = $true
		$filedialog.DefaultExt = ".dps"
		$filedialog.Filter = "DPS File (*.dps)|*.dps"
		$output = $filedialog.ShowDialog()
		if ($filedialog.filename -eq "")
		{
			return
		}
		else
		{
			if ($global:searchstate)
			{
				write-reports -array $global:searchList -path $filedialog.FileName
			}
			else
			{
				write-reports -array $global:reportList -path $filedialog.FileName
			}
		}
		$filePath = $filedialog.FileName
		$fileDir = $filePath.Split(0,$filePath.LastIndexOf("\"))
		if ($global:exportdirectory -ne $fileDir)
		{
			$global:exportdirectory= $fileDir
		}
	}
	else
	{
		[System.Windows.forms.MessageBox]::Show("Please load a file before exporting reports.", "Error")
	}
}

$buttonLoad_Click= {
	#TODO: Place custom script here
	if ($global:changed -eq $true)
	{
		$response = [System.Windows.forms.MessageBox]::Show('Would you like to save the changes made to the original dataset?', 'Save Reports', 'YesNoCancel')
		if ($response.ToString() -eq "Yes")
		{
			write-reports -array $global:reportList -path $global:datasetFile
		}
	}
	[System.Windows.Forms.OpenFileDialog]$filedialog = New-Object System.Windows.Forms.OpenFileDialog
	if ($global:loaddirectory -eq "")
	{
		$filedialog.InitialDirectory = "$ScriptDirectory\data"
	}
	else
	{
		$filedialog.InitialDirectory = $global:loaddirectory
	}
	$filedialog.Title = "Load Dataset"
	$filedialog.CheckFileExists = $true
	$filedialog.Multiselect = $false
	$filedialog.Filter = "DPS files (*.dps)|*.dps"
	$filedialog.ShowDialog()
	if ($buttonUpdate.Text -eq "Updating...")
	{
		
		$filename = $filedialog.FileName
		$filename = $filename.substring($filename.LastIndexOf("\"))
		$text= $buttonUpdate.Text
		while ($filename -eq "\MainDataset.dps" -and $buttonUpdate.Text -eq "Updating...")
		{
			[System.Windows.forms.MessageBox]::Show('Unable to load MainDataset while updating. Please try again.', 'Load Dataset')
			$filedialog.ShowDialog()
			$filename = $filedialog.FileName
			$filename = $filename.substring($filename.LastIndexOf("\"))
		}
	}
	if ($filedialog.filename -eq "")
	{
		return
	}
	else
	{
		
		if ($global:reportList -ne $null)
		{
			$global:reportList.clear()
		}
		if ($global:mainDataTable -ne $null)
		{
			$global:mainDataTable.clear()	
		}
		$global:datasetFile = $filedialog.FileName
		read-Reports -array $global:reportList -path $global:datasetFile
		
		$title = $global:datasetFile.Split("\")
		$title = $title[$title.Length - 1]
		$formMain.Text = "ReportSC: "+$title
		
		$global:changed = $false
		$global:searchstate = $false
		$sizeLabel.Text = "Size: " + $global:reportList.count
		
		$buttonGenerateHistogram.Enabled = $true
		$buttonSave.Enabled = $true
		$buttonExport.Enabled = $true
		$buttonAddRow.Enabled = $true
		
		ConvertTo-DataTable -InputObject $global:reportList -Table $global:mainDataTable -RetainColumns
		Load-DataGridView -DataGridView $datagridviewResults -Item $global:mainDataTable
	}
	$filePath = $filedialog.FileName
	$fileDir = $filePath.Split(0, $filePath.LastIndexOf("\"))
	if ($global:loaddirectory -ne $fileDir)
	{
		$global:loaddirectory = $fileDir
	}
}

$datagridviewResults_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
}

$datagridviewResults_KeyPress=[System.Windows.Forms.KeyPressEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyPressEventArgs]
	#TODO: Place custom script here
	$report = New-Object System.Collections.ArrayList
	$selectedCells = $datagridviewResults.SelectedCells
	
	if ($_.KeyChar.CompareTo([char]'v') -eq 0 -or $_.KeyChar.CompareTo([char]'V') -eq 0)
	{
		if ($selectedCells.count -eq 1 -and $datagridviewResults.CurrentCell -ne $null -and -not $datagridviewResults.CurrentCell.IsInEditMode)
		{
			$columns = $datagridviewResults.Columns
			$currentCell = $datagridviewResults.CurrentCell
			
			$value = $datagridviewResults.CurrentCell.Value
			$reportIndex = $columns["Report #"].Index
			$currentRowIndex = $currentCell.RowIndex
			$reportValue = $datagridviewResults.Rows[$currentRowIndex].Cells[$reportIndex].Value
			[System.Windows.forms.MessageBox]::Show("$value", "Report: " + $reportValue)
			
		}
		if ($selectedCells.Count -eq 9)
		{
			for ($i=1; $i -lt $selectedCells.Count; $i++)
			{
				$report.add($selectedCells[$i].Value)
				if ($selectedCells[$i].RowIndex -ne $selectedCells[$i - 1].RowIndex)
				{
					return
				}
			}
			
			$global:reportDialog.Text = "Report " + $report[0]
			$global:reportDialogLabel1.Text = "Incident: " + $report[1] 
			$global:reportDialogLabel2.Text = "Location: " + $report[2] 
			$global:reportDialogLabel3.Text = "Reported: " + $report[3] 
			$global:reportDialogLabel4.Text = "Occurred: " + $report[4]
			$global:reportDialogLabel5.Text = "Disposition: " + $report[5]
			$global:reportDialogLabel6.Text = "Summary: " + $report[6] 
			$global:reportDialog.showDialog()
			
		}
		
	}
} #error with show summary

$buttonAddRow_Click={
	#TODO: Place custom script here
	if ($global:datasetFile -ne "")
	{
		$global:addDialogField1.text = ""
		$global:addDialogField2.text = ""
		$global:addDialogField3.text = ""
		$global:addDialogField4.text = ""
		$global:addDialogField5.text = ""
		$global:addDialogField6.text = ""
		$global:addDialogField7.text = ""
		$global:addDialogField8.text = ""
		$global:addDialog.ShowDialog()
		$sizelabel.Text = "Size: " + $datagridviewResults.RowCount
	}
	else
	{
		[System.Windows.forms.MessageBox]::Show("Please load a file before adding reports.", "Error")
	}
}

$datagridviewResults_UserDeletingRow=[System.Windows.Forms.DataGridViewRowCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewRowCancelEventArgs]
	#TODO: Place custom script here
	
	$response = [System.Windows.forms.MessageBox]::Show("Are you sure you wish to delete this row?", "Delete Row", 'YesNoCancel')
	if ($response.ToString().Equals("Yes"))
	{
		[int]$index = [System.Convert]::ToInt32($_.Row.Cells[0].Value)
		if ($global:searchstate -eq $true)
		{
			$global:editedsearch = $true
		}
		$global:reportList.removeAt($index)
		$global:changed = $true
		
		foreach ($row in $datagridviewResults.Rows)
		{
			$currindex = [System.Convert]::ToInt32($row.Cells[0].Value)
			if ( $currindex -gt $index)
			{
				$row.Cells[0].Value = $currindex - 1
			}
		}
		
		for ($index; $index -lt $global:reportList.count; $index++)
		{
			$newindex= [System.Convert]::ToInt32($global:reportList[$index]."Index") - 1
			$global:reportList[$index]."Index" = $newindex
		}
		
		$datagridviewResults.Refresh()
		$sizeLabel.Text = "Size: " + ($datagridviewResults.RowCount-1)
		
	}
	else
	{
		$_.Cancel = $true
	}
	
}

$formMain_FormClosing=[System.Windows.Forms.FormClosingEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.FormClosingEventArgs]
	#TODO: Place custom script here
	if ($global:changed -eq $true)
	{
		$response = [System.Windows.forms.MessageBox]::Show('Would you like to save the changes made to the original dataset?', 'Save Reports', 'YesNoCancel')
		if ($response.ToString() -eq "Yes")
		{
			write-reports -array $global:reportList -path $global:datasetFile
			$global:changed = $false
		}
		if ($response.ToString() -eq "Cancel")
		{
			$_.Cancel = $true
		}
	}
}

$buttonSave_Click={
	#TODO: Place custom script here
	$buttonSave.Enabled = $false
	$buttonExport.Enabled = $false
	$buttonExit.Enabled = $false
	$buttonSave.Text = "Saving..."
	#Create a New Job using the Job Tracker
	Add-JobTracker -Name 'Save' -ArgumentList $global:reportList, $global:datasetFile, $ScriptDirectory\bin\ReportIO.ps1 `
	-JobScript {
		#--------------------------------------------------
		#TODO: Set a script block
		#Important: Do not access form controls from this script block.
		try
		{
			. $args[2]
			write-reports -array $args[0] -path $args[1]
			
		}
		catch
		{
			Write-Output $_.Exception.Message | Out-File C:\Users\YutongGu\Desktop\Powershell\DPSReportLog\data\error.txt
			
		}
	}`
	-CompletedScript {
		Param ($Job)
		
		#$results = Receive-Job -Job $Job 
		#$results = ConvertTo-DataTable -InputObject $results -FilterWMIProperties
		#Load-DataGridView -DataGridView $datagridviewResults -Item $results -AutoSizeColumns DisplayedCells
		
		#Enable the Button
		[System.Windows.forms.MessageBox]::Show('Dataset successfully saved', 'Save Reports')
		$buttonSave.ImageIndex = -1
		$buttonSave.Enabled = $true
		$buttonExport.Enabled = $true
		$buttonExit.Enabled = $true
		$global:changed = $false
		$buttonSave.Text= "&Save"
	}`
	-UpdateScript {
		Param ($Job)
		#$results = Receive-Job -Job $Job -Keep
		#Animate the Button
	}
}

$buttonUpdate_Click={
	#TODO: Place custom script here
	$currentDataset = ""
	if ($global:datasetFile -ne "")
	{
		$currentDataset = $global:datasetFile.split($global:datasetFile.lastIndexOf("\"))
	}
	if ($currentDataset -eq "\MainDataset.dps" -and $global:changed -eq $true)
	{
		$response = [System.Windows.forms.MessageBox]::Show('Would you like to save changes made toMainDataset?', 'Update Reports', 'YesNo')
		if ($response.ToString() -eq "Yes")
		{
			write-reports -array $global:reportList -path $global:ScriptDirectory
		}
	}
	$buttonUpdate.Enabled = $false
	$buttonExit.Enabled = $false
	$buttonUpdate.Text= "Updating..."
	[System.Windows.forms.MessageBox]::Show('Checking for updates...', 'Update Reports')
	#Create a New Job using the Job Tracker
	Add-JobTracker -Name 'Update' -ArgumentList $ScriptDirectory `
	-JobScript {
		#--------------------------------------------------
		#TODO: Set a script block
		#Important: Do not access form controls from this script block.
		try
		{
			$response = @(0, 0)
			$path1 = $args[0] + "\bin\DPSCrimeLogGrabber.ps1"
			$path2 = $args[0] + "\bin\UpdateDataset.ps1"
			$path3 = $args[0] + "\bin\ReportIO.ps1"
			$path4 = $args[0] + "\bin\DPSTextParser.ps1"
			. $path1
			. $path2
			. $path3
			. $path4
			$isConnected = [Activator]::CreateInstance([Type]::GetTypeFromCLSID([Guid]'{DCB00C01-570F-4A9B-8D69-199FDBA5723B}')).IsConnectedToInternet
			if ($isConnected)
			{
				$response[0] = update-logs -projectpath $args[0] -option 1
			}
			else
			{
				$response[0] = -1
			}
			$response[1] = update-dataset -projectpath $args[0] -datasetname "MainDataset.dps"
			if ($response[1] -eq 1)
			{
				$path5 = $args[0] + "\data\MainDataset.dps"
				$path6 = $args[0] + "\backup\MainDataset.dps"
				Copy-Item $path5 $path6
			}
			return $response
		}
		catch
		{
			Write-Output $_.Exception.Message | Out-File C:\Users\YutongGu\Desktop\Powershell\DPSReportLog\data\error.txt
			
		}
	}`
	-CompletedScript {
		Param ($Job)
		
		#$results = Receive-Job -Job $Job 
		#$results = ConvertTo-DataTable -InputObject $results -FilterWMIProperties
		#Load-DataGridView -DataGridView $datagridviewResults -Item $results -AutoSizeColumns DisplayedCells
		#Enable the Button
		$results = Receive-Job -Job $Job
		#[System.Windows.forms.MessageBox]::Show($results[0], 'Update Reports')
		if ($results[0] -eq 0)
		{
			if ($results[1] -eq 0)
			{
				[System.Windows.forms.MessageBox]::Show('Everything is up-to-date.', 'Update Reports')
			}
			elseif ($results[1] -eq 1)
			{
				[System.Windows.forms.MessageBox]::Show('MainDataset updated.', 'Update Reports')
			}
			
		}
		elseif ($results[0] -eq 0)
		{
			if ($results[1] -eq 0)
			{
				[System.Windows.forms.MessageBox]::Show('Logs updated.', 'Update Reports')
			}
			else
			{
				[System.Windows.forms.MessageBox]::Show('Logs and MainDataset updated.', 'Update Reports')
				
			}
		}
		else
		{
			if ($results[1] -eq 0)
			{
				[System.Windows.forms.MessageBox]::Show('No internet connection detected. Unable to check for updates on logs. No changes were made.', 'Update Reports')
			}
			else
			{
				[System.Windows.forms.MessageBox]::Show('No internet connection detected. Unable to check for updates on logs. MainDataset updated.', 'Update Reports')
				
			}
		}
		$currentDataset = ""
		if ($global:datasetFile -ne "")
		{
			$currentDataset = $global:datasetFile.split($global:datasetFile.lastIndexOf("\"))
		}
		if ($results[1] -eq 1 -and $currentDataset -eq "\MainDataset.dps")
		{
			$response = [System.Windows.forms.MessageBox]::Show('Would you like to reload MainDataset?', 'Update Reports', 'YesNo')
			if ($response.ToString() -eq "Yes")
			{
				read-Reports -array $global:reportList -path $global:datasetFile
				ConvertTo-DataTable -InputObject $global:reportList -Table $global:mainDataTable -RetainColumns
				Load-DataGridView -DataGridView $datagridviewResults -Item $global:mainDataTable
			}	
		}
		$buttonUpdate.ImageIndex = -1
		$buttonUpdate.Enabled = $true
		$buttonExit.Enabled = $true
		$buttonUpdate.Text = "&Update"
		$global:changed = $false
	}`
	-UpdateScript {
		Param ($Job)
	}
		
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>